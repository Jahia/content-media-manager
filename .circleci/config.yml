version: 2.1

references:
  workdir: &workdir
    working_directory: ~/source

  persist-workspace: &persist-workspace
    persist_to_workspace:
      root: ~/source
      paths:
        - .

  attach-workspace: &attach-workspace
    attach_workspace:
      at: .

commands:
  warmup_on_machine:
    description: "Update or install specific version of libraries"
    steps:
      - run:
          name: Update Node.js and npm
          command: |
            curl -sSL "https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.16.1-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: Check current version of node
          command: |
            node -v
            npm -v

jobs:
  install:
    <<: *workdir

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch

    steps:
      - checkout
      - warmup_on_machine
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: mvn -s .circleci/.circleci.settings.xml clean install
      # Built module is stored in: /home/circleci/source/repo/repo/api/target/jcontent-2.0.0-SNAPSHOT.jar
      - save_cache:
          paths:
            - ~/.m2
          key: v2-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/artifacts/
            cp /home/circleci/source/target/*.jar /tmp/artifacts/
      - store_artifacts:
          path: /tmp/artifacts/
      - *persist-workspace
  deploy:
    <<: *workdir

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch
    
    steps:
      - *attach-workspace
      - run: mvn -s .circleci/.circleci.settings.xml deploy

workflows:
  version: 2
  build:
    jobs:
      - install:
          context: QA_ENVIRONMENT
      - deploy:
          context: QA_ENVIRONMENT
          requires:
            - install
          filters:
            branches:
              only: master
